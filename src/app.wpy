<style lang="less">
@import "style/weui.less";
  .clear-fix{overflow:hidden;_zoom:1;}
  .text-ellipsis{
    white-space: nowrap;
    text-overflow: ellipsis;
    overflow: hidden;
  }
  page{
      background-color: white;
  }
  button{
    padding: 0;
  }
  button::after{
    border: none;
  }
</style>
<script>
import wepy from 'wepy'
import 'wepy-async-function'

import api from '@/utils/api'

import { setStore } from 'wepy-redux'
import configStore from './store'

import tabBar from '@/components/tabBar'

const store = configStore()
setStore(store)

export default class extends wepy.app {
  config = {
    pages: [
      'pages/activities/index',
      'pages/activities/create',
      'pages/activities/management',
      'pages/activities/code',
      'pages/activities/bills/index',
      'pages/activities/bills/management',
      'pages/users/me',
      'pages/auth/login',
      'pages/qas/index'
    ],
    window: {
      backgroundTextStyle: 'light',
      backgroundColor: '#7C5EF2',
      navigationBarBackgroundColor: '#7C5EF2',
      navigationBarTitleText: '同游分账',
      navigationBarTextStyle: 'white'
    },
    tabBar: {
      // selected: 0,
      backgroundColor: '#FFFFFF',
      custom: false,
      list: [{
        pagePath: 'pages/activities/index',
        iconPath: 'images/version_1/zhangdan_unselected.png',
        selectedIconPath: 'images/version_1/zhangdan_selected.png'
      }, {
        pagePath: 'pages/activities/create',
        iconPath: 'images/version_1/create_activity.png',
        selectedIconPath: 'images/version_1/create_activity.png'
      }, {
        pagePath: 'pages/users/me',
        iconPath: 'images/version_1/more_unselected.png',
        selectedIconPath: 'images/version_1/more_selected.png'
      }],
      color: '#707070',
      selectedColor: '#1AAD19'
    }
  }

  globalData = {
    userInfo: null
  }

  components = {
    'tab-bar': tabBar
  }

  constructor () {
    super()
    this.use('requestfix')
    this.use('promisify')
  }

  async onLaunch() {
    console.log('launch')
  }

  // 获取当前登录用户信息
  async getCurrentUser() {
    // 从缓存中获取用户信息
    let user = wepy.getStorageSync('user')
    // 如果用户未登录
    if (!this.checkLogin() || !user) {
      try {
        await api.login()
      } catch (err) {
        console.log(err)
        wepy.showModal({
          title: '提示',
          content: '服务器错误，请联系管理员:' + JSON.stringify(err)
        })
        return null
      }
    }
    return user
  }

  // 用户是否已经登录
  checkLogin() {
    return (wepy.getStorageSync('access_token') !== '')
  }

  // 切换Tabbar
  // selectTabBar(index) {
  //   this.globalData.tabBar.selected = index
  // }
}
</script>
