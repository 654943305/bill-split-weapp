<style lang="less">
@import "style/weui.less";
    .clear-fix{overflow:hidden;_zoom:1;}
    page{
        background-color: white;
    }
</style>
<script>
import wepy from 'wepy'
import 'wepy-async-function'

import api from '@/utils/api'

import { setStore } from 'wepy-redux'
import configStore from './store'


const store = configStore()
setStore(store)

export default class extends wepy.app {
  config = {
    pages: [
      'pages/activities/index',
      'pages/activities/management',
      'pages/activities/code',
      'pages/activities/bills/index',
      'pages/activities/bills/management',
      'pages/users/me',
      'pages/auth/login'
    ],
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: 'white',
      navigationBarTitleText: '算账小能手',
      navigationBarTextStyle: 'black'
    },
    tabBar: {
      selected: 0,
      custom: true,
      list: [{
        pagePath: 'pages/activities/index',
        text: '活动',
        iconPath: 'images/icon_activities.png',
        selectedIconPath: 'images/icon_activities_selected.png'
      }, {
        pagePath: 'pages/users/me',
        text: '更多',
        iconPath: 'images/icon_prompt.png',
        selectedIconPath: 'images/icon_prompt_selected.png'
      }],
      color: '#707070',
      selectedColor: '#1AAD19'
    }
  }

  globalData = {
    userInfo: null,
    tabBar: this.config.tabBar
  }

  constructor () {
    super()
    this.use('requestfix')
    this.use('promisify')
  }

  async onLaunch() {
    console.log('launch')
  }

  // 获取当前登录用户信息
  async getCurrentUser() {
    // 从缓存中获取用户信息
    let user = wepy.getStorageSync('user')
    // 如果用户未登录
    if (!this.checkLogin() || !user) {
      try {
        await api.login()
      } catch (err) {
        console.log(err)
        wepy.showModal({
          title: '提示',
          content: '服务器错误，请联系管理员:' + JSON.stringify(err)
        })
        return null
      }
    }
    return user
  }

  // 用户是否已经登录
  checkLogin() {
    return (wepy.getStorageSync('access_token') !== '')
  }

  // 切换Tabbar
  selectTabBar(index) {
    this.globalData.tabBar.selected = index
  }
}
</script>
