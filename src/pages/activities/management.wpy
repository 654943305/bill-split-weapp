<style lang="less">
  page {
    background: #F4F3F7;
  }

  .participant_warpper{
    width: 120rpx; float: left; display: flex; flex-direction: column; align-items: center; margin: 20rpx 35rpx 0 0;
  }
  .participant_warpper:nth-child(4n){
    margin-right: 0;
  }
</style>
<template>
  <view style="background: #F4F3F7; overflow: hidden; margin-bottom: 170rpx;">
    <view style="width: 670rpx; margin: 24rpx auto 36rpx; border-radius:8rpx; padding: 24rpx 40rpx; box-sizing: border-box; background: white;">
      <input @input="bindActivityName" disabled="{{ user.id !== activity.user_id }}" value="{{ activity.name }}"  style="width: 100%; height: 96rpx; line-height: 96rpx; color: #3C2648; font-size: 36rpx; display: block; box-shadow:0px 2rpx 0px 0px rgba(240,240,240,1);" placeholder="请输入活动名称"/>
      <navigator url="/pages/activities/code?wx_a_code={{ activity.wx_a_code }}" hover-class="none">
        <view style="width: 100%; height: 96rpx; line-height: 96rpx; display: flex; flex-direction: row; justify-content: space-between; align-items: center;box-shadow:0px 2rpx 0px 0px rgba(240,240,240,1);">
          <view style="font-size:32rpx; color: #3C2648; width: 100%; height: 96rpx; line-height: 96rpx;">
            活动小程序码
          </view>
          <view style="vertical-align: middle; text-align: right; width: 100rpx; display: flex; flex-direction: row; align-items: center; justify-content: right;">
            <image src="/images/version_1/xiaochengxuma.png" style="width: 40rpx; height: 40rpx; "></image>
            <image src="/images/version_1/click.png" style="width: 32rpx; height: 32rpx; margin-left: 13rpx; "></image>
          </view>
        </view>
      </navigator>

      <view style="width: 100%; height: 96rpx; line-height: 96rpx; display: flex; flex-direction: row; justify-content: space-between; align-items: center;">
        <view style="font-size:32rpx; color: #3C2648; width: 100%; height: 96rpx; line-height: 96rpx;">
          参与成员（{{ participants.length }}个）
        </view>
        <view style="vertical-align: middle; text-align: right; width: 300rpx; flex-shrink: 0; display: flex; flex-direction: row; align-items: center; justify-content: flex-end;">
          <text wx:if="{{ user.id === activity.user_id }}" style="color: #3C2648; font-size: 28rpx;">请离</text>
          <button wx:if="{{ user.id === activity.user_id }}" @tap="removeParticipants" style="height: 48rpx; width: 48rpx; margin-left: 13rpx; margin-right: 0; line-height: 48rpx; background: none;" hover-class="none;">
            <image src="/images/version_1/kick.png" style="width: 48rpx; height: 48rpx;"></image>
          </button>
          <text style="color: #3C2648; font-size: 28rpx; margin-left: 10rpx;">邀请</text>
          <button open-type="share" style="height: 48rpx; width: 48rpx; margin-left: 13rpx; margin-right: 0; line-height: 48rpx; background: none;" hover-class="none;">
            <image src="/images/version_1/invite.png" style="width: 48rpx; height: 48rpx;"></image>
          </button>
        </view>
      </view>

      <view wx:if="{{participants}}" style="width: 100%; padding: 0 5rpx; box-sizing: border-box;">
        <repeat for="{{ participants }}" wx:key="id" index="index" item="user">
          <view class="participant_warpper" style="">
            <image style="width: 112rpx; height: 112rpx; border-radius: 50%;" src="{{ user.avatar_url }}"></image>
            <text style="font-size:22rpx;color:rgba(60,38,72,1); width: 100%; text-align: center;" class="text-ellipsis">{{ user.name }}</text>
          </view>
        </repeat>
        <view style="clear: both;"></view>
      </view>
    </view>

    <view wx:if="{{ user.id === activity.user_id }}"  style="position: fixed; bottom: 0; width: 100%; height: 170rpx; display: flex; flex-direction: row; justify-content: center; align-items: center;">
      <button bindtap="exit" hover-class="none" style="margin-left: 80rpx; width:282rpx; height:96rpx; border:2rpx solid rgba(255,89,123,1); border-radius:48px; color: #FF597B; font-size:36rpx; font-weight: bold;">删除</button>
      <button bindtap="save" hover-class="none" style="margin-right: 80rpx; width:282rpx; height:96rpx; background:linear-gradient(90deg,rgba(255,117,169,1),rgba(255,86,118,1));box-shadow:0px 4px 0px 1px rgba(255,87,119,0.16);border-radius:48px; color: white; font-size:36rpx; font-weight: bold;">保存</button>
    </view>
  </view>

  <participants-checker :syncShow.sync="showChecker" :syncData.sync="removeAbleParticipants" @finished.user="onCheckerFinished"></participants-checker>

</template>

<script>
  import wepy from 'wepy'
  import api from '@/utils/api'
  import participantsChecker from '@/components/participantsChecker'

  export default class Management extends wepy.page {
    config = {
      navigationBarTitleText: '活动管理',
      navigationBarBackgroundColor: '#F4F3F7',
      backgroundColor: '#F4F3F7',
      navigationBarTextStyle: 'black'
    }
    components = {
      'participants-checker': participantsChecker
    }

    mixins = []

    data = {
      user: null,
      activity: {
        name: ''
      },
      participants: [],
      showChecker: false
    }

    computed = {
      removeAbleParticipants() {
        let removeAbleParticipants = []
        this.participants.forEach(item => {
          if (item.id !== this.user.id) {
            removeAbleParticipants.push(item)
          }
        })
        return removeAbleParticipants
      }
    }

    methods = {
      bindActivityName(e) {
        console.log(e)
        this.activity.name = e.detail.value
        console.log(this.activity.name)
      },
      save() {
        let that = this
        wx.showActionSheet({
          itemList: ['确定'],
          itemColor: '#FF597B',
          async success(res) {
            if (that.activity.name.length === 0) {
              wepy.showToast({
                title: '请输入活动名称',
                icon: 'none',
                duration: 1500
              })
              return
            }
            if (that.activity.name.length > 20) {
              wepy.showToast({
                title: '活动名称太长啦~',
                icon: 'none',
                duration: 1500
              })
              return
            }
            console.log(res.tapIndex)
            try {
              let response = await api.authRequest({
                method: 'POST',
                url: 'activities/save/' + (that.activity.id ? that.activity.id : ''),
                data: {
                  name: that.activity.name
                }
              })
              if (response.statusCode === 201) {
                console.log('success')
                wepy.reLaunch({
                  url: '/pages/activities/index'
                })
              }
            } catch (e) {
              console.log(e)
              wepy.showModal({
                title: '提示',
                content: '服务器错误，请联系管理员'
              })
            }
          },
          fail(res) {
            console.log(res.errMsg)
          }
        })
      },
      exit() {
        let that = this
        wx.showActionSheet({
          itemList: ['确定'],
          itemColor: '#FF597B',
          async success(res) {
            console.log(res.tapIndex)
            try {
              let response = await api.authRequest({
                method: 'DELETE',
                url: 'activities/' + that.activity.id
              })
              if (response.statusCode === 204) {
                console.log('success')
                wepy.reLaunch({
                  url: '/pages/activities/index'
                })
              }
            } catch (e) {
              console.log(e)
              wepy.showModal({
                title: '提示',
                content: '服务器错误，请联系管理员'
              })
            }
          },
          fail(res) {
            console.log(res.errMsg)
          }
        })
      },
      removeParticipants() {
        this.showChecker = true
      },
      async onCheckerFinished(detail) {
        console.log(detail.selected)
        let selectedIds = []
        detail.selected.forEach(item => {
          selectedIds.push(item.id)
        })
        console.log(selectedIds)

        try {
          let response = await api.authRequest({
            method: 'DELETE',
            url: 'activities/' + this.activity.id + '/remove_participants',
            data: {
              user_ids: selectedIds
            }
          })
          if (response.statusCode === 200) {
            this.participants = response.data.data
          }
          this.$apply()
        } catch (err) {
          console.log(err)
          wepy.showModal({
            title: '提示',
            content: '服务器错误，请联系管理员'
          })
        }
      }
    }
    async onLoad(options) {
      this.user = await this.$parent.getCurrentUser()
      console.log('user_id:' + this.user.id)

      if (options.id) {
        this.activity.id = options.id
        try {
          // 请求接口，传入参数
          let response = await api.authRequest({
            url: 'activities/' + options.id + '?include=participatedUsers'
          })

          if (response.statusCode === 200) {
            this.activity = response.data
            this.$apply()
            console.log('activty_id:' + this.activity.id)
            console.log('activty_user_id:' + this.activity.user_id)
            console.log(this.user.id === this.activity.user_id)
            console.log(this.activity.id && this.user.id === this.activity.user_id)
          }
        } catch (err) {
          console.log(err)
          wepy.showModal({
            title: '提示',
            content: '服务器错误，请联系管理员'
          })
        }
        // 加载参与成员数据
        await this.loadParticipants(options.id)
      }
    }

    async loadParticipants(activityId) {
      try {
        let response = await api.authRequest({
          url: 'activities/' + activityId + '/participants'
        })
        if (response.statusCode === 200) {
          this.participants = response.data.data
          this.$apply()
        }
      } catch (err) {
        wepy.showModal({
          title: '提示',
          content: '服务器错误，请联系管理员'
        })
      }
    }

    onShareAppMessage(res) {
      return {
        title: '加入活动：' + this.activity.name,
        path: '/pages/activities/index?to_activity_id=' + (this.activity.id ? this.activity.id : '')
      }
    }
    events = {
    }
  }
</script>
