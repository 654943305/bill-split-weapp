<style lang="less">
  .section{
    background-color: white;
    border: 1px solid transparent;
    border-left: none;
    border-right: none;
    margin: 10px 0;

  }
  .section:first-child{
    border-top: none;
  }
  .portrait_wrap{
    float: left;
    width: 124rpx;
    overflow: hidden;
    text-overflow: ellipsis;
    margin-right: 22rpx;
  }
  .portrait_wrap:nth-child(5n){
    margin-right: 0;
  }
  .portrait{

    >image, .action-wrapper{
      display: block;
      border: 2rpx solid transparent;
      border-radius: 8px;
      width: 120rpx;
      height: 120rpx;
    }
    .action-wrapper{
      border: 2rpx solid #f0f0f0;
      text-align: center;
      line-height: 110rpx;
      width: 118rpx;
      height: 118rpx;
    }
    .action-wrapper>image{
      width: 60rpx;
      height: 60rpx;
      vertical-align: middle;
    }
    .nickname{
      text-align: center;
      font-size: 24rpx;
      display: block;
      margin: 10rpx 0;
      text-overflow: ellipsis;
      white-space:nowrap;
      overflow: hidden;
    }
  }
  .weui-cell__bd.action{
    text-align: center;
  }
  .weui-cell__bd.action.warning{
    color: #ff3536;
  }

  button#invite{
    margin:0;
    padding:0;
    background:white;
    box-sizing: content-box;
    width:120rpx;
    height:120rpx;
  }
  button#invite:after{
    border:1px solid #f0f0f0;
  }
</style>
<template class="bg">
  <view >
    <view wx:if="{{activity.id}}" class="section clear-fix" style="padding: 10px;">
      <repeat for="{{ participants }}" wx:key="id" index="index" item="user">
        <view class="portrait portrait_wrap">
          <image src="{{ user.avatar_url }}"></image>
          <text class="nickname">{{ user.name }}</text>
        </view>
      </repeat>

      <view class="portrait portrait_wrap">
        <button open-type="share" id="invite" class="action-wrapper">
          <image src="/images/icon_m_add.png"></image>
        </button>
      </view>
      <view wx:if="{{ activity.id && user.id === activity.user_id }}" @tap="removeParticipants" class="portrait portrait_wrap">
        <view class="action-wrapper">
          <image src="/images/icon_m_minus.png"></image>
        </view>
      </view>


    </view>

    <view class="section weui-cells weui-cells_after-title">
      <view class="weui-cell weui-cell_input">
        <view class="weui-cell__hd">
          <view class="weui-label">活动名称</view>
        </view>
        <view class="weui-cell__bd">
          <input class="weui-input" disabled="{{ activity.id && user.id !== activity.user_id }}" value="{{ activity.name }}" @input="bindActivityName" placeholder="请输入活动名称"/>
        </view>
      </view>
    </view>

    <view wx:if="{{activity.id}}" class="section weui-cells weui-cells_after-title">
      <navigator url="/pages/activities/code?wx_a_code={{ activity.wx_a_code }}" class="weui-cell weui-cell_access" hover-class="weui-cell_active">
        <view class="weui-cell__bd">活动二维码</view>
        <view class="weui-cell__ft weui-cell__ft_in-access">
          <image style="width: 25px; height: 25px; vertical-align: middle;" src="/images/icon_qrcode.png"></image>
        </view>
      </navigator>
    </view>

    <view wx:if="{{ !activity.id || (activity.id && user.id === activity.user_id) }}"  class="section weui-cells weui-cells_after-title">
      <view wx:if="{{ !activity.id || user.id === activity.user_id }}"  class="weui-cell" hover-class="weui-cell_active" bindtap="save">
        <view class="weui-cell__bd action">
          保存
        </view>
      </view>
      <view wx:if="{{ activity.id && user.id === activity.user_id }}" class="weui-cell" hover-class="weui-cell_active" bindtap="exit">
        <view class="weui-cell__bd action warning" >
          删除并退出
        </view>
      </view>
    </view>
  </view>

  <participants-checker :syncShow.sync="showChecker" :syncData.sync="removeAbleParticipants" @finished.user="onCheckerFinished"></participants-checker>

</template>

<script>
  import wepy from 'wepy'
  import api from '@/utils/api'
  import participantsChecker from '@/components/participantsChecker'

  export default class Management extends wepy.page {
    config = {
      navigationBarTitleText: '活动管理'
    }
    components = {
      'participants-checker': participantsChecker
    }

    mixins = []

    data = {
      user: null,
      activity: {
        name: ''
      },
      participants: [],
      showChecker: false
    }

    computed = {
      removeAbleParticipants() {
        let removeAbleParticipants = []
        this.participants.forEach(item => {
          if (item.id !== this.user.id) {
            removeAbleParticipants.push(item)
          }
        })
        return removeAbleParticipants
      }
    }

    methods = {
      bindActivityName(e) {
        console.log(e)
        this.activity.name = e.detail.value
        console.log(this.activity.name)
      },
      save() {
        let that = this
        wx.showActionSheet({
          itemList: ['确定'],
          itemColor: '#ff3536',
          async success(res) {
            if (that.activity.name.length === 0) {
              wepy.showToast({
                title: '请输入活动名称',
                icon: 'none',
                duration: 1500
              })
              return
            }
            if (that.activity.name.length > 20) {
              wepy.showToast({
                title: '活动名称太长啦~',
                icon: 'none',
                duration: 1500
              })
              return
            }
            console.log(res.tapIndex)
            try {
              let response = await api.authRequest({
                method: 'POST',
                url: 'activities/save/' + (that.activity.id ? that.activity.id : ''),
                data: {
                  name: that.activity.name
                }
              })
              if (response.statusCode === 201) {
                console.log('success')
                wepy.reLaunch({
                  url: '/pages/activities/index'
                })
              }
            } catch (e) {
              console.log(e)
              wepy.showModal({
                title: '提示',
                content: '服务器错误，请联系管理员'
              })
            }
          },
          fail(res) {
            console.log(res.errMsg)
          }
        })
      },
      exit() {
        let that = this
        wx.showActionSheet({
          itemList: ['确定'],
          itemColor: '#ff3536',
          async success(res) {
            console.log(res.tapIndex)
            try {
              let response = await api.authRequest({
                method: 'DELETE',
                url: 'activities/' + that.activity.id
              })
              if (response.statusCode === 204) {
                console.log('success')
                wepy.reLaunch({
                  url: '/pages/activities/index'
                })
              }
            } catch (e) {
              console.log(e)
              wepy.showModal({
                title: '提示',
                content: '服务器错误，请联系管理员'
              })
            }
          },
          fail(res) {
            console.log(res.errMsg)
          }
        })
      },
      removeParticipants() {
        this.showChecker = true
      },
      async onCheckerFinished(detail) {
        console.log(detail.selected)
        let selectedIds = []
        detail.selected.forEach(item => {
          selectedIds.push(item.id)
        })
        console.log(selectedIds)

        try {
          let response = await api.authRequest({
            method: 'DELETE',
            url: 'activities/' + this.activity.id + '/remove_participants',
            data: {
              user_ids: selectedIds
            }
          })
          if (response.statusCode === 200) {
            this.participants = response.data.data
          }
          this.$apply()
        } catch (err) {
          console.log(err)
          wepy.showModal({
            title: '提示',
            content: '服务器错误，请联系管理员'
          })
        }
      }
    }
    async onLoad(options) {
      this.user = await this.$parent.getCurrentUser()
      console.log('user_id:' + this.user.id)

      if (options.id) {
        this.activity.id = options.id
        try {
          // 请求接口，传入参数
          let response = await api.authRequest({
            url: 'activities/' + options.id + '?include=participatedUsers'
          })

          if (response.statusCode === 200) {
            this.activity = response.data
            this.$apply()
            console.log('activty_id:' + this.activity.id)
            console.log('activty_user_id:' + this.activity.user_id)
            console.log(this.user.id === this.activity.user_id)
            console.log(this.activity.id && this.user.id === this.activity.user_id)
          }
        } catch (err) {
          console.log(err)
          wepy.showModal({
            title: '提示',
            content: '服务器错误，请联系管理员'
          })
        }
        // 加载参与成员数据
        await this.loadParticipants(options.id)
      }
    }

    async loadParticipants(activityId) {
      try {
        let response = await api.authRequest({
          url: 'activities/' + activityId + '/participants'
        })
        if (response.statusCode === 200) {
          this.participants = response.data.data
          this.$apply()
        }
      } catch (err) {
        wepy.showModal({
          title: '提示',
          content: '服务器错误，请联系管理员'
        })
      }
    }

    onShareAppMessage(res) {
      return {
        title: '加入活动：' + this.activity.name,
        path: '/pages/activities/index?to_activity_id=' + (this.activity.id ? this.activity.id : ''),
        imageUrl: '/images/placeholders/4.jpg'
      }
    }
    events = {
    }
  }
</script>
