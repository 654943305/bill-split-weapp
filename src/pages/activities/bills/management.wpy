<style lang="less">
  .section{
    background-color: white;
    border: 1px solid transparent;
    border-left: none;
    border-right: none;
    margin: 10px 0;

  }
  .section:first-child{
    border-top: none;
  }

  .weui-cell__bd.action{
    text-align: center;
  }
  .weui-cell__bd.action.warning{
    color: #ff3536;
  }

  // ----
  .items {
    display: flex; justify-content: space-between; align-items: center; margin-top: 10rpx;
  }
  .items:first-child {
    margin-top: 0;
  }
  .wx-switch-input{
    box-sizing: border-box;
    width:80rpx !important;
    height:40rpx !important;
    line-height:40rpx !important;
    background:linear-gradient(90deg, rgb(80, 80, 80), rgb(201, 201, 201));
    border: transparent !important; /* 2018-07-18 重置开关边框颜色 */
  }
  .wx-switch-input-checked {
    background:linear-gradient(90deg,rgba(133,91,243,1),rgba(172,97,246,1));
  }
  /*白色样式（false的样式）*/
  .wx-switch-input::before{
    margin: 6rpx;
    width:28rpx !important;
    height: 28rpx !important;
    border-radius: 50%;
    color: black;
  }
  /*绿色样式（true的样式）*/
  .wx-switch-input::after{
    margin: 6rpx;
    width:28rpx !important;
    height: 28rpx !important;
    border-radius: 50%;
  }
</style>
<template class="bg">
  <view>
    <view style="overflow: hidden; margin: 40rpx 40rpx 0; padding-bottom: 30rpx; display: flex; justify-content: space-between; align-items: center; box-shadow:0px 2rpx 0px 0px rgba(240,240,240,1); overflow: hidden;">
      <view style="width: 100%;"><input style="font-weight: bold;font-size:40rpx; width: 100%;" placeholder="请输入账单标题" value="{{ bill.title }}" @input="bindTitle" /></view>
    </view>
    <view style="margin: 24rpx 40rpx 0;">
      <view style="padding: 28rpx 36rpx; background:rgba(246,245,249,1);border-radius:8rpx; display: flex; justify-content: space-between; align-items: center;">
        <text style="font-size:28rpx;color:rgba(60,38,72,1);opacity:0.8; display: block;">账单总金额</text>
        <input  id="abc"  style="font-size:32rpx;color:rgba(60,38,72,1);opacity:0.8; line-height: 32rpx; display:block; text-align: right;" placeholder="请输入账单总金额"  value="{{ bill.money }}" @input="bindMoney"/>
      </view>
    </view>
    <view style="">
      <view style="box-shadow:0px 2rpx 0px 0px rgba(240,240,240,1); overflow: hidden;">
        <view style="padding: 28rpx 0; display: flex; justify-content: space-between; align-items: center; margin: 0 40rpx 0;">
          <view style="display:flex; justify-content: left;  align-items: center;">
            <text style="font-size:28rpx;color:rgba(60,38,72,1);display: block; font-weight:bold;">具体事项</text>
            <text style="font-size:24rpx;color:rgba(60,38,72,1);opacity:0.4;display: block; font-weight:bold;">（可选填）</text>
          </view>
          <view style="font-size:32rpx;color:rgba(60,38,72,1);opacity:0.8; line-height: 32rpx; display:flex; justify-content: right;  align-items: center;">
            <text style="display: block; font-size: 28rpx;color:rgba(60,38,72,1);opacity:0.8;">新增</text>
            <image @tap="addItem()" src="/images/version_1/invite.png" style="width: 48rpx; height: 48rpx; margin-left: 20rpx;"></image>

          </view>
        </view>
        <view wx:if="{{ bill.items.data.length}}" style="margin-right: 40rpx; margin-bottom: 28rpx;">
          <repeat for="{{ bill.items.data }}" index="index" item="item">
            <view style="display: flex; justify-content: flex-start; align-items: center; margin-top: 10rpx;">
              <image @tap="removeItem({{ index }})" src="/images/version_1/-.png" style="display: block; flex-shrink: 0; width: 32rpx; height: 32rpx; padding: 16rpx;"></image>
              <view class="items" style=" width: 100%; padding: 28rpx 36rpx; background:rgba(246,245,249,1);border-radius:8rpx; margin-top: 0;">
                <input value="{{ item.title }}" @input="bindItemTitle({{ index }})" style="font-size:28rpx;color:rgba(60,38,72,1);opacity:0.8; display: block;" type="text" placeholder="请输入事项及对应金额" />
                <input value="{{ item.money }}" @input="bindItemMoney({{ index }})" style="width: 246rpx; flex-shrink: 0;font-size:32rpx;color:rgba(60,38,72,1);opacity:0.8; line-height: 32rpx; display:block; text-align: right; border-left: 1rpx solid rgba(191,190,196,1); padding-left: 10rpx;" type="digit" placeholder="金额"/>
              </view>
            </view>

          </repeat>
        </view>

      </view>

    </view>
    <view style="margin: 0 40rpx 0;">
      <view style="box-shadow:0px 2rpx 0px 0px rgba(240,240,240,1); overflow: hidden;">
        <view style="padding: 28rpx 0; display: flex; justify-content: space-between; align-items: center;">
          <view style="display:flex; justify-content: left;  align-items: center;">
            <text style="font-size:28rpx;color:rgba(60,38,72,1);display: block; font-weight:bold;">备注</text>
            <text style="font-size:24rpx;color:rgba(60,38,72,1);opacity:0.4;display: block; font-weight:bold;">（可选填）</text>
          </view>

        </view>
        <view style="padding: 28rpx 36rpx; background:rgba(246,245,249,1);border-radius:8rpx; margin-bottom: 28rpx;">
          <textarea  style="font-size:28rpx;color:rgba(60,38,72,1);opacity:0.8; display: block;" wx:if="{{!showChecker}}" auto-height="true" maxlength="1000" value="{{ bill.description }}" @input="bindDescription" placeholder="请输入账单描述"></textarea>
        </view>
      </view>

    </view>
    <view style="margin: 0 40rpx 0;">
      <view style="box-shadow:0px 2rpx 0px 0px rgba(240,240,240,1); overflow: hidden;">
        <view style="padding: 28rpx 0; display: flex; justify-content: space-between; align-items: center; ">
          <view style="display:flex; justify-content: left;  align-items: center;">
            <text style="font-size:28rpx;color:rgba(60,38,72,1);display: block; font-weight:bold;">参与成员</text>
            <text style="font-size:24rpx;color:rgba(60,38,72,1);opacity:0.4;display: block; font-weight:bold;">（{{ bill.participants.data.length }}个）</text>
          </view>
          <view style="font-size:32rpx;color:rgba(60,38,72,1);opacity:0.8; line-height: 32rpx; display:flex; justify-content: right;  align-items: center;">
            <text style="display: block; font-size: 28rpx;color:rgba(60,38,72,1);opacity:0.8;">邀请</text>
            <image @tap="showChecker()" src="/images/version_1/invite.png" style="width: 48rpx; height: 48rpx; margin-left: 20rpx;"></image>
          </view>
        </view>

        <repeat for="{{ bill.participants.data }}" index="index" item="participant">
          <view style="margin-bottom: 24rpx; position: relative; padding: 32rpx 40rpx;box-shadow:0px 4rpx 48rpx 0rpx rgba(234,235,241,1); border-radius:8rpx;">
            <image wx:if="{{ user.id === participant.user.id }}" style="width: 32rpx; height: 32rpx; top: 0; left: 0; position: absolute;" src="/images/version_1/zijidezhangdan.png"></image>

            <view style="display: flex; justify-content: space-between; align-items: center;">
              <view style="display: flex; justify-content: space-between; align-items: center;">
                <image style="width:56rpx;height:56rpx; background:rgba(221,221,221,1); border-radius:50%;" src="{{ participant.user.avatar_url }}"></image>
                <text style="display: block; margin-left: 24rpx; height:30rpx; line-height: 30rpx;font-size:32rpx; font-weight:bold; color:rgba(60,38,72,1);">{{ participant.user.name }}</text>
              </view>
              <label style="display: block;">
                <switch @change="bindPaid({{ index }})" checked="{{ participant.paid }}" style="display:none;"></switch>
                <view wx:if="{{ participant.paid }}"  style="font-size:28rpx;line-height: 28rpx;">
                  已支付<image style="width: 40rpx; height: 40rpx; display: inline-block; vertical-align: middle; margin-left: 16rpx; " src="/images/version_1/selected.png"/>
                </view>
                <view wx:else style="font-size:28rpx;line-height: 28rpx;">
                  未支付<view style="width: 36rpx; height: 36rpx; border:2rpx solid rgba(201,200,204,1); border-radius: 50%; display: inline-block; margin-left: 16rpx; vertical-align: middle;"/>
                </view>
              </label>

            </view>
            <view style="margin-top: 20rpx; padding: 25rpx; background:rgba(246,245,249,1); border-radius:4rpx; display: flex; justify-content: space-between;  align-items: center; ">
              <text style="font-size:28rpx; line-height: 28rpx; color:rgba(60,38,72,1);opacity:0.8; display: block;">需支付</text>
              <input  disabled="{{ !participant.fixed }}" value="{{ participant.split_money }}" @input="bindSplitMoney({{ index }})" focus="{{ focusingParticipant && focusingParticipant.id === participant.id && focusingParticipant.focus}}" @blur="splitMoneyBlur" style="font-size:28rpx; line-height: 28rpx; color:rgba(60,38,72,1); display:block; text-align: right;" placeholder="请输入均摊金额" type="digit" />
            </view>
            <view style="margin-top: 26rpx; display: flex; justify-content: space-between;  align-items: center; ">
              <view style="display: flex; justify-content: flex-start;  align-items: center; ">
                <view style="font-size:24rpx;color:rgba(60,38,72,1);">自动计算</view>
                <view style="height: 52rpx; line-height: 36rpx;">
                  <switch @change="bindFixed({{ index }})" checked="{{ !participant.fixed }}" style="margin-left: 16rpx; vertical-align: middle;"></switch>
                </view>
              </view>
              <view @tap="removeParticipant({{ index }})"  style="font-size:24rpx;color:rgba(255,89,123,1);">移除</view>
            </view>




          </view>
        </repeat>
      </view>

    </view>

    <view style="overflow: hidden;">
      <button @tap="exit" style="display: block; width:590rpx; border:2rpx solid rgba(255,89,123,1); border-radius:48rpx; font-size:36rpx; height:96rpx; line-height: 96rpx;color:rgba(255,89,123,1); margin: 40rpx auto; background: white;">删除账单</button>
      <button @tap="save" style="display: block; width:590rpx; background:linear-gradient(90deg,rgba(255,117,169,1),rgba(255,86,118,1)); box-shadow:0px 4px 0px 1px rgba(255,87,119,0.16); border-radius:48rpx; font-size:36rpx; height:96rpx; line-height: 96rpx;color:white; margin: 20rpx auto 40rpx;">保存</button>
    </view>
  </view>

  <participants-checker :syncShow.sync="showChecker" :syncData.sync="otherParticipants" @finished.user="onCheckerFinished"></participants-checker>
</template>

<script>
  import wepy from 'wepy'
  import participantsChecker from '@/components/participantsChecker'
  import api from '@/utils/api'
  import Decimal from 'decimal'
  import {debounce} from 'debounce'

  export default class Management extends wepy.page {
    config = {
      navigationBarTitleText: '账单管理',
      backgroundColor: '#FFFFFF',
    }
    components = {
      'participants-checker': participantsChecker
    }

    mixins = []

    data = {
      itemTitle: '',
      itemMoney: 0,
      user: {},
      bill: {
        title: '',
        description: '',
        money: 0,
        activity_id: null,
        items: {
          data: []
        },
        participants: {
          data: []
        }
      },
      focusingParticipant: null,
      activityParticipants: [],
      showChecker: false,
      calculating: false
    }

    computed = {
      otherParticipants() {
        let otherParticipants = []
        if (this.bill && this.bill.participants) {
          this.activityParticipants.forEach((item) => {
            if (this.bill.participants.data.findIndex(selectedItem => selectedItem.user_id === item.id) === -1) {
              otherParticipants.push(item)
            }
          })
        }
        return otherParticipants
      },
      isOwner() {
        return this.bill.user_id === this.user.id
      },
      editable() {
        return !this.bill.id || this.user.id === this.bill.user_id
      }
    }
    methods = {
      bindTitle(e) {
        this.bill.title = e.detail.value
      },
      bindMoney(e) {
        console.log(e.detail.value.length)
        console.log(e.detail.value)
        if (e.detail.value.length === 0) {
          this.bill.money = 0
          this.reCaculateBill()
          return 0
        } else {
          if ((/^0[1-9]\d*$/.test(e.detail.value.toString()))) {
            this.bill.money = Number.parseFloat(e.detail.value)
            this.reCaculateBill()
            return this.bill.money
          }
          let regex = /^(0|[1-9]\d*)(\.(\d){0,2})?$/
          if (!regex.test(e.detail.value.toString())) {
            return this.bill.money
          }
          let money = Number.parseFloat(e.detail.value)
          if (Number.isNaN(money)) {
            return this.bill.money
          }
          this.bill.money = money
          this.reCaculateBill()
        }
      },
      bindDescription(e) {
        this.bill.description = e.detail.value
      },
      bindSplitMoney(index, e) {
        let participant = this.bill.participants.data[index]
        if (e.detail.value.length === 0) {
          participant.split_money = 0
          this.reCaculateBill()
          return participant.split_money
        } else {
          if ((/^0[1-9]\d*$/.test(e.detail.value.toString()))) {
            participant.split_money = Number.parseFloat(e.detail.value)
            this.reCaculateBill()
            return participant.split_money
          }
          let regex = /^(0|[1-9]\d*)(\.(\d){0,2})?$/
          if (!regex.test(e.detail.value.toString())) {
            return participant.split_money
          }
          let money = Number.parseFloat(e.detail.value)
          if (Number.isNaN(money)) {
            return participant.split_money
          }
          participant.split_money = e.detail.value
          console.log(this.bill.participants.data[index].split_money)
          this.reCaculateBill()
        }
      },
      splitMoneyBlur() {
        this.focusingParticipant = null
      },
      bindFixed(index, e) {
        let participant = this.bill.participants.data[index]
        participant.fixed = !e.detail.value
        this.reCaculateBill()
        if (participant.fixed) {
          this.focusingParticipant = participant
          this.focusingParticipant.focus = true
        } else {
          this.focusingParticipant = null
        }
      },
      bindPaid(index, e) {
        let participant = this.bill.participants.data[index]
        participant.paid = e.detail.value
      },
      removeParticipant(index) {
        this.bill.participants.data.splice(index, 1)
        this.reCaculateBill()
      },
      async showChecker() {
        // 加载参与成员数据
        await this.loadParticipants(this.bill.activity_id)
        this.showChecker = true
        this.$apply()
      },
      onCheckerFinished(detail) {
        console.log(detail)
        detail.selected.forEach(item => {
          this.bill.participants.data.unshift({user_id: item.id, fixed: 0, paid: 0, user: item})
        })
        this.reCaculateBill()
      },
      bindTempItemTitle(e) {
        console.log(e)
        this.itemTitle = e.detail.value
      },
      bindTempItemMoney(e) {
        if (e.detail.value.length === 0) {
          this.itemMoney = 0
          return 0
        } else {
          if ((/^0[1-9]\d*$/.test(e.detail.value.toString()))) {
            this.itemMoney = Number.parseFloat(e.detail.value)
            return this.itemMoney
          }
          let regex = /^(0|[1-9]\d*)(\.(\d){0,2})?$/
          if (!regex.test(e.detail.value.toString())) {
            return this.itemMoney
          }
          let money = Number.parseFloat(e.detail.value)
          if (Number.isNaN(money)) {
            return this.itemMoney
          }
          this.itemMoney = money
        }
      },
      addItem() {
        this.bill.items.data.unshift({title: '', money: '0.00'})
      },
      removeItem(index) {
        console.log(index)
        this.bill.items.data.splice(index, 1)
      },
      bindItemTitle(index, e) {
        let item = this.bill.items.data[index]
        item.title = e.detail.value
      },
      bindItemMoney(index, e) {
        let item = this.bill.items.data[index]
        if (e.detail.value.length === 0) {
          item.money = 0
          return 0
        } else {
          if ((/^0[1-9]\d*$/.test(e.detail.value.toString()))) {
            item.money = Number.parseFloat(e.detail.value)
            return item.money
          }
          let regex = /^(0|[1-9]\d*)(\.(\d){0,2})?$/
          if (!regex.test(e.detail.value.toString())) {
            return item.money
          }
          let money = Number.parseFloat(e.detail.value)
          if (Number.isNaN(money)) {
            return item.money
          }
          item.money = money
        }
      },
      save() {
        let that = this
        wx.showActionSheet({
          itemList: ['确定'],
          itemColor: '#FF597B',
          async success(res) {
            console.log(res.tapIndex)
            try {
              // 请求接口，传入参数
              let response = await api.authRequest({
                url: 'activities/' + that.bill.activity_id + '/bills/' + (that.bill.id ? that.bill.id : ''),
                method: 'POST',
                data: that.bill
              })

              if (response.statusCode === 204) {
                wepy.navigateBack({
                  delta: 1
                })
              }
            } catch (err) {
              console.log(err)
              wepy.showModal({
                title: '提示',
                content: '服务器错误，请联系管理员'
              })
            }
          },
          fail(res) {
            console.log(res.errMsg)
          }
        })
      },
      exit() {
        let that = this
        wx.showActionSheet({
          itemList: ['确定'],
          itemColor: '#FF597B',
          async success(res) {
            try {
              // 请求接口，传入参数
              let response = await api.authRequest({
                url: 'bills/' + that.bill.id,
                method: 'DELETE'
              })
              if (response.statusCode === 204) {
                wepy.navigateBack({
                  delta: 1
                })
              }
            } catch (err) {
              console.log(err)
              wepy.showModal({
                title: '提示',
                content: '服务器错误，请联系管理员'
              })
            }
            console.log(res.tapIndex)
          },
          fail(res) {
            console.log(res.errMsg)
          }
        })
      }
    }
    async onLoad(options) {
      this.user = await this.$parent.getCurrentUser()
      this.bill.activity_id = options.activity_id
      if (options.id) {
        try {
          // 请求接口，传入参数
          let response = await api.authRequest({
            url: 'bills/' + options.id + '?include=items,participants.user'
          })

          if (response.statusCode === 200) {
            this.bill = response.data
            this.$apply()
          }
        } catch (err) {
          console.log(err)
          wepy.showModal({
            title: '提示',
            content: '服务器错误，请联系管理员'
          })
        }
      }
      // 加载参与成员数据
      await this.loadParticipants(options.activity_id)

      this._debounceReCalculate = debounce(() => {
        let remainMoney = Number.parseFloat(this.bill.money)
        if (Number.isNaN(remainMoney)) {
          return false
        }
        console.log('Remain Money:' + remainMoney)
        let splitCount = 0
        this.bill.participants.data.forEach(item => {
          if (item.fixed) {
            console.log('Item Split Money:' + item.split_money)
            remainMoney = new Decimal(remainMoney).sub(item.split_money).toNumber()
          } else {
            splitCount += 1
          }
        })
        if (splitCount > 0) {
          console.log('Floor:' + remainMoney)
          let splitMoney = new Decimal(Math.floor(new Decimal(remainMoney).mul(100).div(splitCount).toNumber())).div(100).toNumber()
          console.log('Split Count:' + splitCount)
          console.log('Split Money:' + splitMoney)
          let lastOneSplitMoney = new Decimal(remainMoney).sub(new Decimal(splitMoney).mul(splitCount - 1).toNumber()).toNumber()
          console.log('Last One Split Money:' + lastOneSplitMoney)
          this.bill.participants.data.forEach(item => {
            if (!item.fixed) {
              if (remainMoney === lastOneSplitMoney) {
                item.split_money = lastOneSplitMoney
                console.log('last one:' + lastOneSplitMoney)
              } else {
                item.split_money = splitMoney
                console.log('not last one:' + remainMoney)
              }
              remainMoney = new Decimal(remainMoney).sub(item.split_money).toNumber()
            }
          })
        }
        this.calculating = false
        console.log('计算完毕')
        this.$apply()
      }, 500)
    }
    async loadParticipants(activityId) {
      try {
        let response = await api.authRequest({
          url: 'activities/' + activityId + '/participants'
        })
        if (response.statusCode === 200) {
          this.activityParticipants = response.data.data
          this.$apply()
        }
      } catch (err) {
        console.log(err)
        wepy.showModal({
          title: '提示',
          content: '服务器错误，请联系管理员'
        })
      }
    }
    /**
     * 重新计算分摊金额
     * @returns {boolean}
     */
    reCaculateBill() {
      this.calculating = true
      this._debounceReCalculate()
    }

    onShareAppMessage(res) {
      return {
        title: '同游分账: 加入活动',
        path: '/pages/activities/index?to_activity_id=' + (this.bill.activity_id ? this.bill.activity_id : ''),
        imageUrl: '/images/version_1/kongbaiye1.png'
      }
    }

    events = {
    }
  }
</script>
